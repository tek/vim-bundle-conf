snippet do "do |<key>| ... end" i!
do |${1:key}|
	$0
end
endsnippet

snippet doo "do ... end" i!
do
	$0
end
endsnippet

snippet class "class <class_name> def initialize ... end end" !
class ${1:class_name}
	def initialize${2:(${3:*args})}
		$0
	end
end
endsnippet

snippet desc "rspec describe block" !b
describe '${1:description}' do
	$0
end
endsnippet

snippet shex "rspec shared_examples block" !b
shared_examples '${1:description}' do
	$0
end
endsnippet

snippet it "rspec example" !b
it '${1:description}' do
  $0
end
endsnippet

snippet ex "rspec example" !b
example '${1:description}' do
  $0
end
endsnippet

snippet "\b(de)?f" "def <name>..." !r
def ${1:name}${2:(${3:*args})}
	${0}
end
endsnippet

snippet s "self." !
self.
endsnippet

snippet cl "class" !
class ${1:class_name}
end
endsnippet

snippet cs "class << self" !b
class << self
	$0
end
endsnippet

snippet in "initialize method" !b
def initialize${1:(${2:*args})}
	${0}
end
endsnippet

snippet cont "context" !b
context '${1:description}' do
	$0
end
endsnippet

snippet befe "before each" !b
before(:each) do
${0}
end
endsnippet

snippet m "module" !b
module ${1:module_name}
	$0
end
endsnippet

global !p
def block_item(enum):
	match = re.search(r'(\w+?)s?$', enum)
	if match:
		return match.group(1).lower()
	else:
		return 'item'

block_names = {
	'c': 'collect',
	'e': 'each',
	't': 'tap',
	's': 'select',
	'd': 'detect',
}

def block_name(char):
  return block_names[char.lower()]
endglobal

snippet "(\S*)\.([CETSD])" "block inline" r!
`!p
snip.rv = match.group(1)`.`!p
snip.rv = block_name(match.group(2))` { |${1:`!p
snip.rv = block_item(match.group(1)) `}| ${2} }
endsnippet

snippet "(\S*)\.([cetsd])" "block inline" r!
`!p
snip.rv = match.group(1)`.`!p
snip.rv = block_name(match.group(2))` do |${1:`!p
snip.rv = block_item(match.group(1)) `}|
	${2}
end
endsnippet

snippet let "rspec let" b!
let(:${1:name}) { ${0} }
endsnippet

snippet "\.ce" "class_exec" r!
.class_exec do
  $0
end
endsnippet

snippet { "inline block" !
{ |${1:item}| $0
endsnippet

snippet sex "shared examples" !b
shared_examples '${1:description}' do
	${0}
end
endsnippet
